# ZodiaCore CI Workflow
# This workflow handles continuous integration for the ZodiaCore project
# It runs on every push to main branch and on pull requests
# Includes build, test, linting, and security scans

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Build and test job for the main application
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['20.x']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm run install:all

    - name: Run linting
      run: npx eslint . --ext .js,.ts,.jsx,.tsx

    - name: Run tests
      run: npm run test:run
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/zodiacore_test

    - name: Build frontend
      run: npm run build

    - name: Security scan with npm audit
      run: npm audit --audit-level moderate

  # Security scanning job
  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Docker build test job
  docker-build-test:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker images
      run: |
        docker-compose -f infrastructure/docker/docker-compose.yml build --no-cache
        docker-compose -f infrastructure/docker/docker-compose.staging.yml build --no-cache

    - name: Test Docker containers startup
      run: |
        docker-compose -f infrastructure/docker/docker-compose.yml up -d
        sleep 30
        docker-compose -f infrastructure/docker/docker-compose.yml ps
        docker-compose -f infrastructure/docker/docker-compose.yml down

  # Code coverage report
  coverage:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm run install:all

    - name: Run tests with coverage
      run: npm run test:run -- --coverage
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/zodiacore_test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false